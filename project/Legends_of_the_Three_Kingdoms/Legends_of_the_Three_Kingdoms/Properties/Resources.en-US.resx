<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_at_ActionPhase" xml:space="preserve">
    <value> at ActionPhase</value>
  </data>
  <data name="_at_DiscardPhase" xml:space="preserve">
    <value> at DiscardPhase</value>
  </data>
  <data name="_at_DrawingPhase" xml:space="preserve">
    <value> at DrawingPhase</value>
  </data>
  <data name="_at_JudgePhase" xml:space="preserve">
    <value> at JudgePhase</value>
  </data>
  <data name="_at_PlayerTurn" xml:space="preserve">
    <value> at PlayerTurn</value>
  </data>
  <data name="_Dead" xml:space="preserve">
    <value> Dead</value>
  </data>
  <data name="_Don_t_have_the_ability" xml:space="preserve">
    <value> Don't have the ability</value>
  </data>
  <data name="_health" xml:space="preserve">
    <value> health:</value>
  </data>
  <data name="_King" xml:space="preserve">
    <value> King</value>
  </data>
  <data name="_response_card" xml:space="preserve">
    <value> response card</value>
  </data>
  <data name="_start" xml:space="preserve">
    <value> start</value>
  </data>
  <data name="_try_to_use" xml:space="preserve">
    <value> try to use </value>
  </data>
  <data name="Ability_of_Liu_is_given_no_car" xml:space="preserve">
    <value>Ability of Liu is given no card</value>
  </data>
  <data name="Ability_of_Sun_is_given_no_car" xml:space="preserve">
    <value>Ability of Sun is given no card</value>
  </data>
  <data name="abilityaction_null" xml:space="preserve">
    <value>abilityaction null</value>
  </data>
  <data name="abilityActon_null" xml:space="preserve">
    <value>abilityActon null</value>
  </data>
  <data name="Attack" xml:space="preserve">
    <value>Attack</value>
  </data>
  <data name="Attack_Description" xml:space="preserve">
    <value>Attack Description</value>
  </data>
  <data name="Barbarians" xml:space="preserve">
    <value>Barbarians</value>
  </data>
  <data name="Barbarians_Description" xml:space="preserve">
    <value>Barbarians Description</value>
  </data>
  <data name="BlackShield" xml:space="preserve">
    <value>BlackShield</value>
  </data>
  <data name="BlackShield_Description" xml:space="preserve">
    <value>BlackShield Description</value>
  </data>
  <data name="Break" xml:space="preserve">
    <value>Break</value>
  </data>
  <data name="Break_Description" xml:space="preserve">
    <value>Break Description</value>
  </data>
  <data name="Button_type_not_found" xml:space="preserve">
    <value>Button type not found!</value>
  </data>
  <data name="Cannot_be_uese" xml:space="preserve">
    <value>Cannot be uese</value>
  </data>
  <data name="cannot_draw_card" xml:space="preserve">
    <value>cannot draw card</value>
  </data>
  <data name="Cao_Cao" xml:space="preserve">
    <value>Cao Cao</value>
  </data>
  <data name="CaoCao" xml:space="preserve">
    <value>CaoCao</value>
  </data>
  <data name="Capture" xml:space="preserve">
    <value>Capture</value>
  </data>
  <data name="Capture_Description" xml:space="preserve">
    <value>Capture Description</value>
  </data>
  <data name="Card_collection_for_a_carset_c" xml:space="preserve">
    <value>Card collection for a carset cannot be null</value>
  </data>
  <data name="CardList_is_not_defined" xml:space="preserve">
    <value>CardList is not defined</value>
  </data>
  <data name="Crossbow" xml:space="preserve">
    <value>Crossbow</value>
  </data>
  <data name="Crossbow_Description" xml:space="preserve">
    <value>Crossbow Description</value>
  </data>
  <data name="curphase_null" xml:space="preserve">
    <value>curphase null</value>
  </data>
  <data name="Dead_phase_of" xml:space="preserve">
    <value>Dead phase of </value>
  </data>
  <data name="descripty_is_null" xml:space="preserve">
    <value>descripty is null</value>
  </data>
  <data name="downleft_player" xml:space="preserve">
    <value>downleft_player</value>
  </data>
  <data name="downleft_player_ab" xml:space="preserve">
    <value>downleft_player_ab</value>
  </data>
  <data name="downright_player" xml:space="preserve">
    <value>downright_player</value>
  </data>
  <data name="downright_player_ab" xml:space="preserve">
    <value>downright_player_ab</value>
  </data>
  <data name="EightTrigrams" xml:space="preserve">
    <value>EightTrigrams</value>
  </data>
  <data name="EightTrigrams_Description" xml:space="preserve">
    <value>EightTrigrams Description</value>
  </data>
  <data name="Empty_PhaseList_Exception" xml:space="preserve">
    <value>Empty PhaseList Exception</value>
  </data>
  <data name="game_null" xml:space="preserve">
    <value>game null</value>
  </data>
  <data name="HailofArrow" xml:space="preserve">
    <value>HailofArrow</value>
  </data>
  <data name="HailofArrow_Description" xml:space="preserve">
    <value>HailofArrow Description</value>
  </data>
  <data name="harmPhase_null" xml:space="preserve">
    <value>harmPhase null</value>
  </data>
  <data name="healthlimit_is_negative" xml:space="preserve">
    <value>healthlimit is negative</value>
  </data>
  <data name="hold_cards" xml:space="preserve">
    <value>hold_cards</value>
  </data>
  <data name="IceSword" xml:space="preserve">
    <value>IceSword</value>
  </data>
  <data name="IceSword_Description" xml:space="preserve">
    <value>IceSword Description</value>
  </data>
  <data name="If_Lu_Meng_does_not_use_any_At" xml:space="preserve">
    <value>If Lu Meng does not use any Attack cards during his turn, he can skip his discard phase</value>
  </data>
  <data name="Invalid_operation" xml:space="preserve">
    <value>Invalid operation</value>
  </data>
  <data name="Invisible_Phase_should_not_giv" xml:space="preserve">
    <value>Invisible Phase should not give null </value>
  </data>
  <data name="Liu_Bei" xml:space="preserve">
    <value>Liu Bei</value>
  </data>
  <data name="Liu_Bei_s_can_give_any_number_" xml:space="preserve">
    <value>Liu Bei's can give any number of his hand cards to any players. If he gives away more than one card, he recovers one unit of health</value>
  </data>
  <data name="LiuBei" xml:space="preserve">
    <value>LiuBei</value>
  </data>
  <data name="Lu_Meng" xml:space="preserve">
    <value>Lu Meng</value>
  </data>
  <data name="LuMeng" xml:space="preserve">
    <value>LuMeng</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="Miss" xml:space="preserve">
    <value>Miss</value>
  </data>
  <data name="Miss_Description" xml:space="preserve">
    <value>Miss Description</value>
  </data>
  <data name="name_is_null" xml:space="preserve">
    <value>name is null</value>
  </data>
  <data name="Negate" xml:space="preserve">
    <value>Negate</value>
  </data>
  <data name="Negate_Description" xml:space="preserve">
    <value>Negate Description</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="no_card_in_hands" xml:space="preserve">
    <value>no card in hands</value>
  </data>
  <data name="Once_during_his_turn_Sun_Quan_" xml:space="preserve">
    <value>Once during his turn, Sun Quan can discard any number of cards to draw the same number</value>
  </data>
  <data name="Peach" xml:space="preserve">
    <value>Peach</value>
  </data>
  <data name="Peach_Description" xml:space="preserve">
    <value>Peach Description</value>
  </data>
  <data name="PeachGarden" xml:space="preserve">
    <value>PeachGarden</value>
  </data>
  <data name="PeachGarden_Description" xml:space="preserve">
    <value>PeachGarden Description</value>
  </data>
  <data name="Phaselist_is_empty" xml:space="preserve">
    <value>Phaselist is empty</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Player </value>
  </data>
  <data name="Player_Description_at" xml:space="preserve">
    <value>Player Description at</value>
  </data>
  <data name="Plyaer" xml:space="preserve">
    <value>Plyaer </value>
  </data>
  <data name="pos_is_negative" xml:space="preserve">
    <value>pos is negative</value>
  </data>
  <data name="res" xml:space="preserve">
    <value>
</value>
  </data>
  <data name="res0" xml:space="preserve">
    <value>: </value>
  </data>
  <data name="res1" xml:space="preserve">
    <value>[</value>
  </data>
  <data name="res2" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="res3" xml:space="preserve">
    <value>]</value>
  </data>
  <data name="Response_Phase_of" xml:space="preserve">
    <value>Response Phase of </value>
  </data>
  <data name="response_with_card" xml:space="preserve">
    <value>response with card </value>
  </data>
  <data name="Run_out_of_cards" xml:space="preserve">
    <value>Run out of cards</value>
  </data>
  <data name="Scimitar" xml:space="preserve">
    <value>Scimitar</value>
  </data>
  <data name="Scimitar_Description" xml:space="preserve">
    <value>Scimitar Description</value>
  </data>
  <data name="Start_the_game" xml:space="preserve">
    <value>Start the game</value>
  </data>
  <data name="Starvation" xml:space="preserve">
    <value>Starvation</value>
  </data>
  <data name="Starvation_Description" xml:space="preserve">
    <value>Starvation Description</value>
  </data>
  <data name="Steal" xml:space="preserve">
    <value>Steal</value>
  </data>
  <data name="Steal_Description" xml:space="preserve">
    <value>Steal Description</value>
  </data>
  <data name="Such_Card_Cannot_be_Found" xml:space="preserve">
    <value>Such Card Cannot be Found</value>
  </data>
  <data name="Sun_Quan" xml:space="preserve">
    <value>Sun Quan</value>
  </data>
  <data name="SunQuan" xml:space="preserve">
    <value>SunQuan</value>
  </data>
  <data name="The_card_stack_is_empty" xml:space="preserve">
    <value>The card stack is empty</value>
  </data>
  <data name="The_game_has_ended" xml:space="preserve">
    <value>The game has ended </value>
  </data>
  <data name="The_round_of" xml:space="preserve">
    <value>The round of </value>
  </data>
  <data name="The_stages_stack_is_empty" xml:space="preserve">
    <value>The stages stack is empty</value>
  </data>
  <data name="There_should_not_be_this_kind_" xml:space="preserve">
    <value>There should not be this kind of player type </value>
  </data>
  <data name="This_is_player" xml:space="preserve">
    <value>This is player </value>
  </data>
  <data name="this_player" xml:space="preserve">
    <value>this_player</value>
  </data>
  <data name="this_player_ab" xml:space="preserve">
    <value>this_player_ab</value>
  </data>
  <data name="this_player_stage" xml:space="preserve">
    <value>this_player_stage</value>
  </data>
  <data name="Tick" xml:space="preserve">
    <value>Tick</value>
  </data>
  <data name="timeout" xml:space="preserve">
    <value>timeout</value>
  </data>
  <data name="timeOutAdvance_cannot_return_n" xml:space="preserve">
    <value>timeOutAdvance cannot return null</value>
  </data>
  <data name="tool_attack" xml:space="preserve">
    <value>tool_attack</value>
  </data>
  <data name="tool_attack_ab" xml:space="preserve">
    <value>tool_attack_ab</value>
  </data>
  <data name="tool_defence" xml:space="preserve">
    <value>tool_defence</value>
  </data>
  <data name="upleft_player" xml:space="preserve">
    <value>upleft_player</value>
  </data>
  <data name="upleft_player_ab" xml:space="preserve">
    <value>upleft_player_ab</value>
  </data>
  <data name="upright_player" xml:space="preserve">
    <value>upright_player</value>
  </data>
  <data name="upright_player_ab" xml:space="preserve">
    <value>upright_player_ab</value>
  </data>
  <data name="waitTime_should_not_be_negativ" xml:space="preserve">
    <value>waitTime should not be negative</value>
  </data>
  <data name="Wealth" xml:space="preserve">
    <value>Wealth</value>
  </data>
  <data name="Wealth_Description" xml:space="preserve">
    <value>Wealth Description</value>
  </data>
  <data name="When_Cao_Cao_is_damaged_by_a_c" xml:space="preserve">
    <value>When Cao Cao is damaged by a card, he can immediately put it into his hand</value>
  </data>
  <data name="Wine" xml:space="preserve">
    <value>Wine</value>
  </data>
  <data name="Wine_Description" xml:space="preserve">
    <value>Wine Description</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Zhang_Fei" xml:space="preserve">
    <value>Zhang Fei</value>
  </data>
  <data name="Zhang_Fei_has_no_restrictions_" xml:space="preserve">
    <value>Zhang Fei has no restrictions on how many times he can attack during his turn</value>
  </data>
  <data name="ZhangFei" xml:space="preserve">
    <value>ZhangFei</value>
  </data>
</root>